@model WebForm.Models.PaginatedList<WebForm.Models.User>
@{
    ViewData["Title"] = "All Users";
    var searchString = ViewData["SearchString"] as string;
}

<style>
    table {
        width: 100%;
        height:50%;
        border-collapse: collapse;
    }

    a {
        text-decoration: none;
        color: black;
    }

    th, td {
        border: 1px solid black;
        padding: 8px;
        text-align: left;
    }

    th {
        background-color: lightgoldenrodyellow;
    }

    td {
        background-color: ghostwhite;
    }

    .pagination-summary {
        margin-top: 10px;
        font-size: 14px;
        color: #333;
    }

        .pagination-summary span {
            margin-right: 10px;
        }

    .pagination li.disabled a {
        pointer-events: none;
        color: #ccc;
    }

    .pagination li a {
        text-decoration: none;
        color: #007bff;
    }

    .pagination li.active a {
        font-weight: bold;
        color: #495057;
    }

    .flex-container > div {
        background-color: #f1f1f1;
        margin: 10px;
        padding: 20px;
        font-size: 14px;
        display: flex;
        justify-content: space-between;
       
    }
    #image {
        background-image: url('/image/pexels-fotios-photos-1048283.jpg'); 
        justify-content: space-between;
    }
    button {
        margin: 50px;
    }

    body{
        background-image: url('/image/download.jpg');
      
    }
</style>

<h1>All Users</h1>

<div class="flex-container">
    <div id="image">
        <form method="get" action="@Url.Action("GetUser")">
            <input type="text" name="searchString" value="@ViewData["SearchString"]" placeholder="Search users " />
            <button type="submit" class="btn btn-primary">Search</button>
        </form>

    
        <p>
            <a asp-action="Add">
                <button type="submit" class="btn btn-success">Add User</button>
            </a>
        </p>

        <form asp-action="DownloadGrid" method="get">
            <button type="submit" class="btn btn-danger">Download</button>
        </form>
    </div>
</div>

<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Age</th>
            <th>Phone Number</th>
            <th>Alternate Phone Number</th>
            <th>Email</th>
            <th>Password</th>
            <th>Confirm Password</th>
            <th>Gender</th>
            <th>Marital Status</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Id</td>
                <td>@user.FirstName</td>
                <td>@user.LastName</td>
                <td>@user.Age</td>
                <td>@user.PhoneNumber</td>
                <td>@user.AlternatePhoneNumber</td>
                <td>@user.Email</td>
                <td>@user.Password</td>
                <td>@user.ConfirmPassword</td>
                <td>@user.Gender</td>
                <td>@user.MaritalStatus</td>
                <td>
                    <a asp-action="UpdateUser" asp-route-id="@user.Id">Edit</a>
                </td>
                <td>
                    <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this user?');">
                        <input type="hidden" name="_method" value="DELETE" />
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>


<form asp-action="UploadGrid" method="post" enctype="multipart/form-data">
    <input type="file" id="fileInput" name="file" class="form-control" />
    <button type="submit" id="uploadButton" class="btn btn-secondary" disabled>Upload</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var fileInput = document.getElementById('fileInput');
        var uploadButton = document.getElementById('uploadButton');

        fileInput.addEventListener('change', function () {
            if (fileInput.files.length > 0) {
                uploadButton.disabled = false;
            } else {
                uploadButton.disabled = true;
            }
        });
    });
</script>



<div>
    <!-- Pagination Controls -->
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="GetUser" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-searchString="@ViewData["SearchString"]" title="Previous">
                    <i class="fa fa-chevron-left"></i>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" title="Previous">
                    <i class="fa fa-chevron-left"></i>
                </a>
            </li>
        }

        <div>
            <p>Page @Model.PageNumber out of @Model.TotalPages</p>
        </div>

        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-action="GetUser" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-searchString="@ViewData["SearchString"]" title="Next">
                    <i class="fa fa-chevron-right"></i>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" title="Next">
                    <i class="fa fa-chevron-right"></i>
                </a>
            </li>
        }
    </ul>

    <!-- Pagination Summary -->
    <div class="pagination-summary">
        <span>Total Items: @Model.Items.Count()</span>
    </div>
</div>

<div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
        Records
    </button>
    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
      
        <li><a class="dropdown-item" href="@Url.Action("GetUser", "User", new { searchString = ViewData["SearchString"] })">5 Records</a></li>
        <li><a class="dropdown-item" href="@Url.Action("Get10User", "User", new { searchString = ViewData["SearchString"] })">10 Records</a></li>
        <li><a class="dropdown-item" href="@Url.Action("Get15User", "User", new { searchString = ViewData["SearchString"] })">15 Records</a></li>
        <li><a class="dropdown-item" href="@Url.Action("AllRecords", "User", new { searchString = ViewData["SearchString"] })">All Records</a></li>
      
    </ul>
</div>

<!-- Include Bootstrap 5.3.3 CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.3/css/bootstrap.min.css" rel="stylesheet" />

<!-- Include Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<!-- Include Bootstrap 5.3.3 JS Bundle with Popper -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.3/js/bootstrap.bundle.min.js"></script>
